from rest_framework import serializers
from .models import Category, Product, ProductAttribute, Attribute

class CategorySerializer(serializers.ModelSerializer):
    image = serializers.ImageField(required=False)  # –î–æ–¥–∞—î–º–æ –ø—ñ–¥—Ç—Ä–∏–º–∫—É –∑–æ–±—Ä–∞–∂–µ–Ω—å

    class Meta:
        model = Category
        fields = ['id', 'name', 'slug', 'created_at', 'parent', 'image']  # –î–æ–¥–∞—î–º–æ `image`
        ref_name = "ShopCategorySerializer"


class ProductAttributeSerializer(serializers.ModelSerializer):
    class Meta:
        model = ProductAttribute
        fields = ['attribute', 'value']  # –ü–æ–ª—è –∞—Ç—Ä–∏–±—É—Ç—ñ–≤ (attribute.name —ñ value)

    attribute = serializers.CharField(source='attribute.name')  # –í–∏–≤–æ–¥–∏–º–æ –Ω–∞–∑–≤—É –∞—Ç—Ä–∏–±—É—Ç—É –∑–∞–º—ñ—Å—Ç—å ID
    

'''v1
class ProductSerializer(serializers.ModelSerializer):
    class Meta:
        model = Product
        #fields = '__all__'
        fields = [
            'id', 'title', 'brand', 'slug', 'price', 'image', 'available', 'category'
        ]
        ref_name = "ShopProductSerializer"  # –£–Ω—ñ–∫–∞–ª—å–Ω–µ —ñ–º'—è –¥–ª—è —Ü—å–æ–≥–æ —Å–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ç–æ—Ä–∞
'''
class ProductSerializer(serializers.ModelSerializer):
    attributes = ProductAttributeSerializer(many=True, required=False)

    class Meta:
        model = Product
        fields = [
            #'id', 'title', 'brand', 'slug', 'price', 'image', 'available', 'category', 'attributes'
            'id', 'title', 'brand', 'description', 'slug', 'price', 'purchase_price', 'image', 'available', 'discount', 'category', 'attributes'
        ]
        ref_name = "ShopProductSerializer"

    def create(self, validated_data):
        attributes_data = validated_data.pop('attributes', [])
        product = Product.objects.create(**validated_data)

        for attr in attributes_data:
            attribute_name = attr.get('attribute')
            value = attr.get('value')

            # üî• –Ø–∫—â–æ –∞—Ç—Ä–∏–±—É—Ç —ñ—Å–Ω—É—î ‚Üí –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ, —è–∫—â–æ –Ω—ñ ‚Üí —Å—Ç–≤–æ—Ä—é—î–º–æ
            attribute, created = Attribute.objects.get_or_create(name=attribute_name)

            # üî• –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ —ñ—Å–Ω—É—î —Ç–∞–∫–∞ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∞ –¥–ª—è —Ü—å–æ–≥–æ –ø—Ä–æ–¥—É–∫—Ç—É
            ProductAttribute.objects.update_or_create(
                product=product, attribute=attribute, defaults={"value": value}
            )

        return product


class ProductDetailtSerializer(serializers.ModelSerializer):
    attributes = ProductAttributeSerializer(source='product_attributes', many=True)  # –ü–æ–≤'—è–∑–∞–Ω–µ –ø–æ–ª–µ

    class Meta:
        model = Product
        fields = [
            'id', 'title', 'brand', 'description', 'slug', 'price', 'purchase_price', 'image', 'available',
            'created_at', 'updated_at', 'discount', 'category', 'attributes'
        ]
        ref_name = "ShopProductDetailSerializer"  # –£–Ω—ñ–∫–∞–ª—å–Ω–µ —ñ–º'—è

class AttributeSerializer(serializers.ModelSerializer):
    class Meta:
        model = Attribute
        fields = ['id', 'name']  # –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –∫–æ—Ä–µ–∫—Ç–Ω—ñ –ø–æ–ª—è