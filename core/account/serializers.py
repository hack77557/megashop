'''
# serializers.py
from rest_framework_simplejwt.serializers import TokenObtainPairSerializer

class MyTokenObtainPairSerializer(TokenObtainPairSerializer):
    @classmethod
    def get_token(cls, user):
        token = super().get_token(user)
        # –î–æ–¥–∞—î–º–æ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –¥–∞–Ω—ñ –¥–æ —Ç–æ–∫–µ–Ω–∞
        token['email'] = user.email
        token['middle_name'] = user.middle_name
        token['phone'] = user.phone
        token['date_of_birth'] = str(user.date_of_birth) if user.date_of_birth else None
        token['sex'] = user.sex
        token['language'] = user.language
        return token
'''


from djoser.serializers import UserSerializer
from rest_framework import serializers
from account.models import CustomUser  # –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –≤–∞—à—É –º–æ–¥–µ–ª—å –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞

class CustomUserSerializer(UserSerializer):
    """
    –ö–∞—Å—Ç–æ–º–Ω–∏–π —Å–µ—Ä—ñ–∞–ª—ñ–∑–∞—Ç–æ—Ä –¥–ª—è /account/api/users/me/, —è–∫–∏–π –¥–æ–¥–∞—î –≤—Å—ñ –ø–æ–ª—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.
    """

    middle_name = serializers.CharField(required=False, allow_blank=True, allow_null=True)
    phone = serializers.CharField(required=False, allow_blank=True, allow_null=True)
    date_of_birth = serializers.DateField(required=False, allow_null=True)
    sex = serializers.CharField(required=False, allow_blank=True, allow_null=True)
    language = serializers.CharField(required=False, allow_blank=True, allow_null=True)

    class Meta(UserSerializer.Meta):
        model = CustomUser
        fields = (
            "id", "username", "email", "role", "first_name", "last_name", "middle_name", 
            "phone", "date_of_birth", "sex", "language", "is_staff", "is_active", "date_joined"
        )
        ref_name = "AccountCustomUserSerializer"  # üîπ –î–æ–¥–∞—î–º–æ —É–Ω—ñ–∫–∞–ª—å–Ω–µ —ñ–º'—è
